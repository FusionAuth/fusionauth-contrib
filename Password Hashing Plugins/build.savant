/*
 * Copyright (c) 2020-2022, FusionAuth, All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
savantVersion = "1.0.0"

project(group: "io.fusionauth", name: "fusionauth-example-password-encryptor", version: "0.1.0", licenses: ["ApacheV2_0"]) {
  workflow {
    fetch {
      cache()
      url(url: "https://repository.savantbuild.org")
    }
    publish {
      cache()
    }
  }

  publishWorkflow {
    subversion(repository: "https://svn.savantbuild.org")
  }

  dependencies {
    group(name: "compile") {
      dependency(id: "com.google.inject:guice:4.2.3")
      dependency(id: "com.google.inject.extensions:guice-multibindings:4.2.3")
      // Required for the Argon2 Plugin.
      // argon-jvm
      //    \__ argon2-jvm-nolibs
      dependency(id: "de.mkammerer:argon2-jvm:2.9.1")
      dependency(id: "de.mkammerer:argon2-jvm-nolibs:2.9.1")
      dependency(id: "com.lambdaworks:scrypt:1.4.0")
      dependency(id: "commons-codec:commons-codec:1.4")
    }
    group(name: "provided") {
      dependency(id: "io.fusionauth:fusionauth-plugin-api:1.15.8")
//      dependency(id: "io.fusionauth:fusionauth-plugin-api:1.35.0-{integration}")
    }
    group(name: "test-compile") {
      dependency(id: "org.testng:testng:6.14.3")
    }
  }

  publications {
    standard()
  }
}

/*
 * Define Plugins
 */

dependency = loadPlugin(id: "org.savantbuild.plugin:dependency:1.0.2")
java = loadPlugin(id: "org.savantbuild.plugin:java:1.2.0")
javaTestNG = loadPlugin(id: "org.savantbuild.plugin:java-testng:1.0.9")
idea = loadPlugin(id: "org.savantbuild.plugin:idea:1.0.1")
release = loadPlugin(id: "org.savantbuild.plugin:release-git:${savantVersion}")

/*
 * Plugin Settings
 */

java.settings.javaVersion = "1.8"
javaTestNG.settings.javaVersion = "1.8"

target(name: "clean", description: "Cleans out the build directory") {
  java.clean()
}

target(name: "compile", description: "Compiles the project") {
  java.compile()
}

target(name: "jar", description: "JARs the project", dependsOn: ["compile"]) {
  java.jar()
}

target(name: "test", description: "Executes the projects tests", dependsOn: ["jar"]) {
  javaTestNG.test()
}

target(name: "int", description: "Releases a local integration build of the project", dependsOn: ["test"]) {
  dependency.integrate()
}

target(name: "idea", description: "Updates the IntelliJ IDEA module file") {
  idea.iml()
}

target(name: "print-dependency-tree", description: "Prints the dependency tree") {
  dependency.printFull()
}

target(name: "release", description: "Releases a full version of the project", dependsOn: ["clean", "int"]) {
  release.release()
}