# Example SSL reverse proxy config for FusionAuth
#
# SSL specific configs mostly taken from https://ssl-config.mozilla.org/
#
# This config will work well if all you want to do is use Nginx to terminate SSL
# (and perhaps to work with LetsEncrypt challenges). If you plan on doing more
# complex "virtual hosting" then see the Apache example - nginx may not be a
# suitable choice in that use-case.

server {

    listen 443 ssl http2;
    server_name auth.example.com;

    ssl_certificate           /etc/ssl/mycert.pem;
    ssl_certificate_key       /etc/ssl/mycert.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /path/to/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    access_log            /var/log/nginx/access.log;

    # Set proxy config
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_read_timeout  90;
    proxy_http_version  1.1;

    location / {
      proxy_pass http://localhost:9011;
    }
  }
